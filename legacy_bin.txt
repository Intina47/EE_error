// the method crawl() takes a url as a parameter and returns the html content of the url
std::string WebCrawler::crawl(const std::string& url) {
    if (curl) {
        curl_easy_setopt(curl, CURLOPT_URL, url.c_str());
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, WriteCallback);
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        res = curl_easy_perform(curl);
        if (res != CURLE_OK) {
            std::cerr << "curl_easy_perform() failed: " << curl_easy_strerror(res) << std::endl;
        }
        return readBuffer;
    } else {
        std::cerr << "curl_easy_init() failed to initialize libcurl" << std::endl;
        return "";
    }
}